@import '../../theme/bootstrap.overrides/variables.scss';
@import '../../theme/bootstrap.overrides/mixins/_buttons.scss';
@import '../Nav/vars.scss';
.app {
  height: 100%; //to allow space for a vertical menu bar
  // position:relative;
}

.navbar {
  // line-height: 20px;
  // font-size: 14px;
  .userWidget {
    button {
      color: $custom6;
      &:hover,
      &:active,
      &:focus {
        color: $custom6;
      }
    }
  }
  .navbar-main>li>a {
    text-transform: uppercase;
    &:hover,
    &:focus {
      background-color: inherit;
    }
  } // .navbar-main > li > a:hover, .navbar-main > li > a:focus {
  //   background-color: inherit;
  // }
  // @include background-opacity($custom3, 0.8);
  // transition: all .2s;
  // border-bottom-width: 1px;
  background-color: rgba(255, 255, 255, .87);
  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.2),
  0 1px 1px 0 rgba(0, 0, 0, 0.14),
  0 2px 1px -1px rgba(0, 0, 0, 0.12);
  .no-rgba & {
    background-color: white;
  }
  ul.navbar-main {
    &>.active>a {
      border-bottom: 2px solid $custom5;
    }
    li:hover a {
      border-bottom: 2px solid $custom5;
      transition: 0s;
    }
    &>li>a {
      transition: 0.4s;
      color: $custom6;
    }
  } // /**
  //
  // Right side
  //
  // **/
  .navbarRight {
    a {
      button {
        margin: 7.25px 1.5px;
      }
    }
  }
}

.kadasterSvg {
  display: flex;
  align-items: center;
  height: 100%;

  img {
    max-height: 80%;
    width: initial;
    
  }
}

.navBrand,
.separator {
  color: $custom3;
  &:hover,
  &:active,
  &:focus {
    color: $custom3;
  }
  text-decoration: inherit;
}

.separator {
  padding: 0px 10px;
}

.appContent {
  position: absolute;
  overflow: auto;
  top: $navbar-height;
  right: 0;
  bottom: 0;
  transition: left $animateDuration cubic-bezier(0.4, 0.0, 0.2, 1);
}

.brandWrapper {
  float: left;
  font-size: 19px;
  line-height: 21px;
  height: $navbar-height;
  display: flex;
  justify-content: center;
  a,
  span {
    display: flex;
    align-items: center;
  }
}

@keyframes overlayLeave {
  0% {
    right: 0;
    bottom: 0;
  }
  99% {
    opacity: 0;
  }
  100% {
    right: 100%;
    bottom: 100%;
  }
}

.overlay {
  background-color: $custom6;
  opacity: 0;
  position: fixed;
  top: 0;
  left: 0;
  right: 100%;
  bottom: 100%;
  z-index: 40; //should be less than ds panel
  transition: opacity $animateDuration ease;
}

:global(.toggled) .overlay {
  right: 0;
  bottom: 0;
  opacity: 0.4;
}

@media #{$showCollapsableOnSize} {
  //if panel is toggled, and window is resized (larger). still make sure to hide verlay
  :global(.toggled) .overlay {
    right: 100%;
    bottom: 100%;
    opacity: 0;
  }
}

//use global style, so we can use this in other components
.panel {
  //position is taken care of by component itself
  width: $panelWidth;
}

.appContent {
  left: $panelWidth;
}
